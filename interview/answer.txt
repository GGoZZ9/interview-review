*HashMap*	                            *HashSet*
HashMap实现了Map接口	                    HashSet实现了Set接口
HashMap储存键值对	                        HashSet仅仅存储对象
使用put()方法将元素放入map中	            使用add()方法将元素放入set中
HashMap中使用键对象来计算hashcode值	        HashSet使用成员对象来计算hashcode值，对于两个对象来说hashcode可能相同，所以equals()方法用来判断对象的相等性，如果两个对象不同的话，那么返回false
HashMap比较快，因为是使用唯一的键来获取对象	HashSet较HashMap来说比较慢


HashMap :
hash表的主干是数组，通过hash函数得到存储位置，也就相当于数组下标直接取数，随机取的速度很快
如果两个不同的元素，hash计算后得到存储位置一样，出现hash冲突，用链地址法也就是数组+链表解决冲突。线性链表新增，删除很快，而查找慢，需要遍历链表
hashCode()被用来创建hash映射关系
关键字通过hash函数得到存储位置
是一个最常用的Map，它根据键的HashCode 值存储数据，根据键可以直接获取它的值，具有很快的访问速度。
LinkedHashMap也是一个HashMap，但是内部维持了一个双向链表，可以保持顺序；
TreeMap：可以用于排序；
