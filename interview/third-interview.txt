SRE面试：


电话面试-上海
1. cucumber框架的结构
2. hashMap hashSet区别: HashSet直接把值进行hash,是一个不允许有重复元素的集合,是无序的
3. shell三剑客，找到log文件中的特定时间段的内容并放入新的文件
4. restful是什么：是一种规范和原则
网络上的一个实体为资源，资源可以有多种形式 json，xml，资源在客户端和服务器之间转化，客户端和服务器互动，
互联网通信协议HTTP协议，是一个无状态协议。这意味着，所有的状态都保存在服务器端。因此，如果客户端想要操作服务器，必须通过某种手段，让服务器端发生"状态转化"（State Transfer）。而这种转化是建立在表现层之上的，所以就是"表现层状态转化"。
客户端用到的手段，只能是HTTP协议。具体来说，就是HTTP协议里面，四个表示操作方式的动词：GET、POST、PUT、DELETE。它们分别对应四种基本操作：GET用来获取资源，POST用来新建资源（也可以用于更新资源），PUT用来更新资源，DELETE用来删除资源。
（1）每一个URI代表一种资源；
（2）客户端和服务器之间，传递这种资源的某种表现层；json，xml
（3）客户端通过四个HTTP动词，对服务器端资源进行操作，实现"表现层状态转化"。

5. 性能测试了解多少
6. case定义了多少等级
7. CICD 的流程
8. java如何生成随机数 new Random(Instant.now().getEpochSecond()); random.nextInt(max - min + 1) + min;
9. pipeline用什么开发的：jenkins shared library架构，groovy开发
10. String和string有什么不同： string是一个字符串常量


2位senior manager
1. spring boot starter都做了什么: 在启动过程中会根据约定的信息对资源进行初始化
2. bean 一定是线程安全的吗 https://cloud.tencent.com/developer/article/1743283
默认是单例，单例通常不是线程安全的，因为多线程用一个单例，如果是无状态的就是线程安全的，也就是只查询不存储数据
想要线程安全就把bean作用域改成 prototype，每次创建新的bean，线程间不存在bean的共享
controller、service和dao层本身并不是线程安全的，只是如果只是调用里面的方法，而且多线程调用一个实例的方法，
会在内存中复制变量，这是自己的线程的工作内存，是安全的。
Java虚拟机栈是线程私有的，它的生命周期与线程相同。虚拟机栈描述的是Java方法执行的内存模型：
每个方法在执行的同时都会创建一个栈帧用于存储局部变量表、操作数栈、动态链接、方法出口等信息。
局部变量封闭在执行线程的栈中，其他线程无法访问这个栈
所以其实任何无状态单例都是线程安全的

3. 性能测试的几种, 性能要求从业务来还是存系统设计来
4. 如何发现性能问题，dump文件
5. kafka 等中间件，kafka如果6个partition，10个consumer怎么办，想决定顺序怎么办
6. hashMap 底层机制，好处，和ArrayList区别
7. spring boot cloud
8. 线程池，executor 有几种，用的哪种，核心线程数最大线程数
9. ui selenium 用哪些driver，获取元素的方法，页面有多个同样的元素怎么办
10. 为什么用微服务，不用单体
11. 白盒测试，帮助发现性能问题, 如何发现性能问题，dump文件
12. java new 一个class都做了什么，堆里存什么，栈里存什么，除了引用还有什么, java的内存结构
13. 除了cucumber还用过什么框架
14. 中间件如何测试，没有接口，如何性能测试，如果验证收到的消息
15. k8s 用到哪些命令，部署到pod里还是哪，用docker镜像还是啥镜像
16. 如果压测vm都被占用了怎么办
17. driver.quite, driver.exit的区别

manager:
1. cucumber有哪些不好用的地方: 只是一个工具
2.

测试人员：
1. cucumber的入口, 整个框架描述
2. 性能测试有哪些种: load, stress, endurance, pike
3. 对shell用到哪个程度
4. Python tuple的特点



印度男人：
1. http response 返回错误怎么办



印度女人：
1. HTTP 返回的200 ， 500 在header里吗？
2. sql：left join, right join，group by
3. HashTable和HashMap区别: HashTable 线程安全，已经改用ConcurrentHasMap
4. feature 文件怎么写
5. override和overload区别: override 运行是多态，overload编译时多态,
6. Hello 字符串，取出子字符串: Hello.substring()


开发manager:
1. junit 用过哪些注解: @Test, @ExtendWith, @Mock
2. spring 用过哪些注解: @SpringBootTest @ActiveProfile @ContexConfigration @Configration @Import @Service @Component
3. feature文件怎么写，Background，Scenario outline的作用
4. 如何用map处理XML，重复的element name怎么办


开发人员:
1. 多线程 ExecutorService executorService = Executors.newCachedThreadPool()
2. Hint
3. 用索引一定能能提高速度吗
4. 为什么java不允许多继承
5. 抽象类和接口区别
6. java8新特性，接口和抽象类
7. linux shell 如何写循环  for; do done 循环
8. jenkins pipeline 声明式和脚本式的区别
9. String , StringBuilder, StringBuffer
10. hashMap, linkedHashMap: linkedHashMap 里面的元素是有序的。
11. HashCode为什么要重写
重写equals，必须重写hashCode： 两个相等的对象必须具有相等的散列码（Java关键约定）
两个所有属性都相等的对象，但是地址不同。没重写hashCode时，p.hash == hash 一定不相等。但是逻辑上这两个对象是相等的，并且equals也是相等的。
这就会导致，HashMap里面本来有这个key，但是你告诉我没有，导致了put操作成功。逻辑上是不符合规范的，get时取出来的也可能是自己另一个的value。
判断两个key是否相同逻辑
先比较 hash (通过hashCode的高16位和低16位进行异或运算得出的) ，因为两个相同的对象hash值一定相等。
再比较两个对象的地址是否相同，== 判断是否绝对相等，而equals判断是否客观相等。
12. Python2和Python3的区别:https://blog.csdn.net/ljl6158999/article/details/78983725
13. Python 各种数据类型
14. list有哪些方法：reverse,
15. 如何提高mutation覆盖率：UT把分支和逻辑判断都覆盖到
16. 压力测试遇到过的问题
17. 压力测试结果通知



